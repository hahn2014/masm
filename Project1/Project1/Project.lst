Microsoft (R) Macro Assembler Version 14.15.26726.0	    01/09/19 16:40:17
Program 1		(Project1.asm			     Page 1 - 1


				TITLE Program 1		(Project1.asm)

				; Author: Bryce Hahn
				; Course/Project ID: CS 271 Project 1
				; Date: 1/9/2019
				; Description: Get the input for two numbers from the user,
				; add them up, divide, subtract and multiply, and tell if the second number is larger than the first number.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data								; var declaration
 00000000 0000000A		num1			DWORD	10			; The first number the user will enter
 00000004 00000007		num2			DWORD	7			; The second number the user will enter
 00000008 00000000		sum				DWORD	?			; the sum of the inputs
 0000000C 00000000		dif				DWORD	?			; the difference of the inputs
 00000010 00000000		prod			DWORD	?			; the product of the inputs
 00000014 00000000		quotient		DWORD	?			; the quotient of the inputs
 00000018 00000000		remain			DWORD	?			; the remainder of the quotient
 0000001C 00000000		keep_going		DWORD	?			; Continue running the program until the user quits
 00000020 57 65 6C 63 6F	intro_1			BYTE	"Welcome to Add 'Em Up! In this program you will give two integers and I will add them up! (and subtract, divide, multiply)", 0
	   6D 65 20 74 6F
	   20 41 64 64 20
	   27 45 6D 20 55
	   70 21 20 49 6E
	   20 74 68 69 73
	   20 70 72 6F 67
	   72 61 6D 20 79
	   6F 75 20 77 69
	   6C 6C 20 67 69
	   76 65 20 74 77
	   6F 20 69 6E 74
	   65 67 65 72 73
	   20 61 6E 64 20
	   49 20 77 69 6C
	   6C 20 61 64 64
	   20 74 68 65 6D
	   20 75 70 21 20
	   28 61 6E 64 20
	   73 75 62 74 72
	   61 63 74 2C 20
	   64 69 76 69 64
	   65 2C 20 6D 75
	   6C 74 69 70 6C
	   79 29 00
 0000009B 44 6F 6E 27 74	intro_2			BYTE	"Don't forget that I only want the second number to be lower than the first.", 0
	   20 66 6F 72 67
	   65 74 20 74 68
	   61 74 20 49 20
	   6F 6E 6C 79 20
	   77 61 6E 74 20
	   74 68 65 20 73
	   65 63 6F 6E 64
	   20 6E 75 6D 62
	   65 72 20 74 6F
	   20 62 65 20 6C
	   6F 77 65 72 20
	   74 68 61 6E 20
	   74 68 65 20 66
	   69 72 73 74 2E
	   00
 000000E7 50 6C 65 61 73	prompt_1		BYTE	"Please provide your first integer: ", 0
	   65 20 70 72 6F
	   76 69 64 65 20
	   79 6F 75 72 20
	   66 69 72 73 74
	   20 69 6E 74 65
	   67 65 72 3A 20
	   00
 0000010B 50 6C 65 61 73	prompt_2		BYTE	"Please provide your second integer: ", 0
	   65 20 70 72 6F
	   76 69 64 65 20
	   79 6F 75 72 20
	   73 65 63 6F 6E
	   64 20 69 6E 74
	   65 67 65 72 3A
	   20 00
 00000130 54 68 65 20 73	failed_1		BYTE	"The second integer was bigger than the first.", 0
	   65 63 6F 6E 64
	   20 69 6E 74 65
	   67 65 72 20 77
	   61 73 20 62 69
	   67 67 65 72 20
	   74 68 61 6E 20
	   74 68 65 20 66
	   69 72 73 74 2E
	   00
 0000015E 50 6C 65 61 73	failed_prompt_1 BYTE	"Please enter a new integer: ", 0
	   65 20 65 6E 74
	   65 72 20 61 20
	   6E 65 77 20 69
	   6E 74 65 67 65
	   72 3A 20 00
 0000017B 49 27 6D 20 73	input_too_big	BYTE	"I'm sorry, the second integer was bigger than the first! Try another.", 0
	   6F 72 72 79 2C
	   20 74 68 65 20
	   73 65 63 6F 6E
	   64 20 69 6E 74
	   65 67 65 72 20
	   77 61 73 20 62
	   69 67 67 65 72
	   20 74 68 61 6E
	   20 74 68 65 20
	   66 69 72 73 74
	   21 20 54 72 79
	   20 61 6E 6F 74
	   68 65 72 2E 00
 000001C1 54 68 65 20 73	result_1		BYTE	"The sum of ", 0
	   75 6D 20 6F 66
	   20 00
 000001CD 54 68 65 20 64	result_2		BYTE	"The difference of ", 0
	   69 66 66 65 72
	   65 6E 63 65 20
	   6F 66 20 00
 000001E0 54 68 65 20 70	result_3		BYTE	"The product of ", 0
	   72 6F 64 75 63
	   74 20 6F 66 20
	   00
 000001F0 54 68 65 20 71	result_4		BYTE	"The quotient of ", 0
	   75 6F 74 69 65
	   6E 74 20 6F 66
	   20 00
 00000201 54 68 65 20 66	result_5		BYTE	"The floating-point quotient of ", 0
	   6C 6F 61 74 69
	   6E 67 2D 70 6F
	   69 6E 74 20 71
	   75 6F 74 69 65
	   6E 74 20 6F 66
	   20 00
 00000221 44 6F 20 79 6F	prompt_3		BYTE	"Do you wish to add some more? (Press 1 to start over) ", 0
	   75 20 77 69 73
	   68 20 74 6F 20
	   61 64 64 20 73
	   6F 6D 65 20 6D
	   6F 72 65 3F 20
	   28 50 72 65 73
	   73 20 31 20 74
	   6F 20 73 74 61
	   72 74 20 6F 76
	   65 72 29 20 00
 00000258 54 68 61 6E 6B	finish			BYTE	"Thanks for addin up! Goodbye.", 0
	   73 20 66 6F 72
	   20 61 64 64 69
	   6E 20 75 70 21
	   20 47 6F 6F 64
	   62 79 65 2E 00
 00000276 3D 00			result_string	BYTE	"=", 0
 00000278 2B 00			sum_string		BYTE	"+", 0
 0000027A 2D 00			dif_string		BYTE	"-", 0
 0000027C 2A 00			prod_string		BYTE	"*", 0
 0000027E 2F 00			quotient_string BYTE	"/", 0
 00000280 20 72 65 6D 61	remain_string	BYTE	" remainder ", 0
	   69 6E 64 65 72
	   20 00


 00000000			.code				; end of data segment
 00000000			main PROC
					; Introduce user to the program, and what they need to do/instructions
						;intro 1
 00000000  BA 00000020 R			mov		edx, OFFSET intro_1
 00000005  E8 00000000 E			call	WriteString
 0000000A  E8 00000000 E			call	CrLf
						; intro 2
 0000000F  BA 0000009B R			mov		edx, OFFSET intro_2
 00000014  E8 00000000 E			call	WriteString
 00000019  E8 00000000 E			call	CrLf

 0000001E			Inputs:					; get user inputs for 2 random integers
 0000001E  BA 000000E7 R			mov		edx, OFFSET prompt_1
 00000023  E8 00000000 E			call	WriteString
						; get the input
 00000028  E8 00000000 E			call	ReadInt
 0000002D  A3 00000000 R			mov		num1, eax

 00000032  BA 0000010B R			mov		edx, OFFSET prompt_2
 00000037  E8 00000000 E			call	WriteString
						; get the input
 0000003C  E8 00000000 E			call	ReadInt
 00000041  A3 00000004 R			mov		num2, eax

					; check to see if the second integer is bigger than the first one
 00000046  A1 00000004 R			mov		eax, num2
 0000004B  3B 05 00000000 R			cmp		eax, num1
 00000051  7F 02				jg		FailedInput
 00000053  7E 32				jle		Calculations

 00000055			FailedInput:			; let the user know the input was UNACEPTABLE
 00000055  BA 00000130 R			mov		edx, OFFSET failed_1
 0000005A  E8 00000000 E			call	WriteString
 0000005F  E8 00000000 E			call	CrLf
 00000064  BA 0000015E R			mov		edx, OFFSET failed_prompt_1
 00000069  E8 00000000 E			call	WriteString
 0000006E  E8 00000000 E			call	ReadInt
 00000073  A3 00000004 R			mov		num2, eax

						;once again check
 00000078  A1 00000004 R			mov		eax, num2
 0000007D  3B 05 00000000 R			cmp		eax, num1
 00000083  7F D0				jg		FailedInput
 00000085  7E 00				jle		Calculations


 00000087			Calculations:			; calculate all the different forms
					; calculate the sum of the two numbers
 00000087  A1 00000000 R			mov		eax, num1
 0000008C  03 05 00000004 R			add		eax, num2
 00000092  A3 00000008 R			mov		sum, eax
						
					; calculate the difference of the two numbers
 00000097  A1 00000000 R			mov		eax, num1
 0000009C  8B 1D 00000004 R			mov		ebx, num2
 000000A2  2B C3				sub		eax, ebx
 000000A4  A3 0000000C R			mov		dif, eax

					; calculate the product of the two numbers
 000000A9  A1 00000000 R			mov		eax, num1
 000000AE  8B 1D 00000004 R			mov		ebx, num2
 000000B4  F7 E3				mul		ebx
 000000B6  A3 00000010 R			mov		prod, eax

					; calculate the quotient of the two numbers
 000000BB  BA 00000000				mov		edx, 0
 000000C0  A1 00000000 R			mov		eax, num1
 000000C5  99					cdq
 000000C6  8B 1D 00000004 R			mov		ebx, num2
 000000CC  99					cdq
 000000CD  F7 F3				div		ebx

 000000CF  A3 00000014 R			mov		quotient, eax
 000000D4  89 15 00000018 R			mov		remain, edx

					; calculate the floating point quotient of the two numbers





					; print result
 000000DA  BA 000001C1 R			mov		edx, OFFSET result_1
 000000DF  E8 00000000 E			call	WriteString					; "The sum of "
 000000E4  A1 00000000 R			mov		eax, num1
 000000E9  E8 00000000 E			call	WriteDec					; num1
 000000EE  BA 00000278 R			mov		edx, OFFSET sum_string
 000000F3  E8 00000000 E			call	WriteString					; "+"
 000000F8  A1 00000004 R			mov		eax, num2
 000000FD  E8 00000000 E			call	WriteDec					; num2
 00000102  BA 00000276 R			mov		edx, OFFSET result_string
 00000107  E8 00000000 E			call	WriteString					; "="
 0000010C  A1 00000008 R			mov		eax, sum
 00000111  E8 00000000 E			call	WriteDec					; res
 00000116  E8 00000000 E			call	CrLf

 0000011B  BA 000001CD R			mov		edx, OFFSET result_2
 00000120  E8 00000000 E			call	WriteString					; "The difference of "
 00000125  A1 00000000 R			mov		eax, num1
 0000012A  E8 00000000 E			call	WriteDec					; num1
 0000012F  BA 0000027A R			mov		edx, OFFSET dif_string
 00000134  E8 00000000 E			call	WriteString					; "-"
 00000139  A1 00000004 R			mov		eax, num2
 0000013E  E8 00000000 E			call	WriteDec					; num2
 00000143  BA 00000276 R			mov		edx, OFFSET result_string
 00000148  E8 00000000 E			call	WriteString					; "="
 0000014D  A1 0000000C R			mov		eax, dif
 00000152  E8 00000000 E			call	WriteDec					; res
 00000157  E8 00000000 E			call	CrLf

 0000015C  BA 000001E0 R			mov		edx, OFFSET result_3
 00000161  E8 00000000 E			call	WriteString					; "The product of "
 00000166  A1 00000000 R			mov		eax, num1
 0000016B  E8 00000000 E			call	WriteDec					; num1
 00000170  BA 0000027C R			mov		edx, OFFSET prod_string
 00000175  E8 00000000 E			call	WriteString					; "*"
 0000017A  A1 00000004 R			mov		eax, num2
 0000017F  E8 00000000 E			call	WriteDec					; num2
 00000184  BA 00000276 R			mov		edx, OFFSET result_string
 00000189  E8 00000000 E			call	WriteString					; "="
 0000018E  A1 00000010 R			mov		eax, prod
 00000193  E8 00000000 E			call	WriteDec					; res
 00000198  E8 00000000 E			call	CrLf

 0000019D  BA 000001F0 R			mov		edx, OFFSET result_4
 000001A2  E8 00000000 E			call	WriteString					; "The quotient of "
 000001A7  A1 00000000 R			mov		eax, num1
 000001AC  E8 00000000 E			call	WriteDec					; num1
 000001B1  BA 0000027E R			mov		edx, OFFSET quotient_string
 000001B6  E8 00000000 E			call	WriteString					; "/"
 000001BB  A1 00000004 R			mov		eax, num2
 000001C0  E8 00000000 E			call	WriteDec					; num2
 000001C5  BA 00000276 R			mov		edx, OFFSET result_string
 000001CA  E8 00000000 E			call	WriteString					; "="
 000001CF  A1 00000014 R			mov		eax, quotient
 000001D4  E8 00000000 E			call	WriteDec					; quotient
 000001D9  BA 00000280 R			mov		edx, OFFSET remain_string
 000001DE  E8 00000000 E			call	WriteString					; " remainder "
 000001E3  A1 00000018 R			mov		eax, remain
 000001E8  E8 00000000 E			call	WriteDec					; remainder
 000001ED  E8 00000000 E			call	CrLf


 000001F2  BA 00000201 R			mov		edx, OFFSET result_5
 000001F7  E8 00000000 E			call	WriteString					; "The floating-point quotient of "
 000001FC  A1 00000000 R			mov		eax, num1
 00000201  E8 00000000 E			call	WriteDec					; num1
 00000206  BA 0000027E R			mov		edx, OFFSET quotient_string
 0000020B  E8 00000000 E			call	WriteString					; "/"
 00000210  A1 00000004 R			mov		eax, num2
 00000215  E8 00000000 E			call	WriteDec					; num2
 0000021A  BA 00000276 R			mov		edx, OFFSET result_string
 0000021F  E8 00000000 E			call	WriteString					; "="

 00000224  E8 00000000 E			call	CrLf

 00000229			RunAgain:					; ask if the user wishes to run aagain.
 00000229  BA 00000221 R			mov		edx, OFFSET prompt_3
 0000022E  E8 00000000 E			call	WriteString
						; get user input for a y or n
 00000233  E8 00000000 E			call	ReadInt
 00000238  A3 0000001C R			mov		keep_going, eax

 0000023D  83 F8 01				cmp		eax, 1
 00000240  0F 84 FFFFFDD8			je		Inputs		; Jumps to int inputs if wanted, else end program

					; exit the program
 00000246  BA 00000258 R			mov		edx, OFFSET finish
 0000024B  E8 00000000 E			call	CrLf
 00000250  E8 00000000 E			call	WriteString
 00000255  E8 00000000 E			call	CrLf
					exit			; close program, return to OS
 0000025A  6A 00	   *	    push   +000000000h
 0000025C  E8 00000000 E   *	    call   ExitProcess
 00000261			main ENDP


				END main
Microsoft (R) Macro Assembler Version 14.15.26726.0	    01/09/19 16:40:17
Program 1		(Project1.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000028C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000261 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000261 Public STDCALL
  Inputs . . . . . . . . . . . .	L Near	 0000001E _TEXT	
  FailedInput  . . . . . . . . .	L Near	 00000055 _TEXT	
  Calculations . . . . . . . . .	L Near	 00000087 _TEXT	
  RunAgain . . . . . . . . . . .	L Near	 00000229 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
dif_string . . . . . . . . . . .	Byte	 0000027A _DATA	
dif  . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
failed_1 . . . . . . . . . . . .	Byte	 00000130 _DATA	
failed_prompt_1  . . . . . . . .	Byte	 0000015E _DATA	
finish . . . . . . . . . . . . .	Byte	 00000258 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
input_too_big  . . . . . . . . .	Byte	 0000017B _DATA	
intro_1  . . . . . . . . . . . .	Byte	 00000020 _DATA	
intro_2  . . . . . . . . . . . .	Byte	 0000009B _DATA	
keep_going . . . . . . . . . . .	DWord	 0000001C _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
num1 . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
num2 . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
prod_string  . . . . . . . . . .	Byte	 0000027C _DATA	
prod . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
prompt_1 . . . . . . . . . . . .	Byte	 000000E7 _DATA	
prompt_2 . . . . . . . . . . . .	Byte	 0000010B _DATA	
prompt_3 . . . . . . . . . . . .	Byte	 00000221 _DATA	
quotient_string  . . . . . . . .	Byte	 0000027E _DATA	
quotient . . . . . . . . . . . .	DWord	 00000014 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remain_string  . . . . . . . . .	Byte	 00000280 _DATA	
remain . . . . . . . . . . . . .	DWord	 00000018 _DATA	
result_1 . . . . . . . . . . . .	Byte	 000001C1 _DATA	
result_2 . . . . . . . . . . . .	Byte	 000001CD _DATA	
result_3 . . . . . . . . . . . .	Byte	 000001E0 _DATA	
result_4 . . . . . . . . . . . .	Byte	 000001F0 _DATA	
result_5 . . . . . . . . . . . .	Byte	 00000201 _DATA	
result_string  . . . . . . . . .	Byte	 00000276 _DATA	
sum_string . . . . . . . . . . .	Byte	 00000278 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
